syntax = "proto3";

package api.user.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/WH-5/user-service/api/user/v1;v1";
option java_multiple_files = true;
option java_package = "api.user.v1";

service User {
	rpc Register (RegisterRequest) returns (RegisterReply){
		option (google.api.http) = {
			post: "/user/register"
			body: "*"
		};
	}
	rpc Login (LoginRequest) returns (LoginReply){
		option (google.api.http) = {
			post: "/user/login"
			body: "*"
		};
	}
	rpc Profile (ProfileRequest) returns  (ProfileReply){
		option (google.api.http) = {
			post: "/user/profile"
			body: "*"
		};
	}
	rpc UpdateUniqueId (UniqueIdRequest) returns  (UniqueIdReply){
		option (google.api.http) = {
			post: "/user/unique"
			body: "*"
		};
	}
	rpc GetProfile (GetProfileRequest) returns  (GetProfileReply){
		option (google.api.http) = {
			get: "/user/profile/info/{unique_id}"
		};
	}
	rpc UpdatePassword (UpdatePasswordRequest) returns  (UpdatePasswordReply){
		option (google.api.http) = {
			post: "/user/password"
			body: "*"
		};
	}
}
message UpdatePasswordRequest{
	string unique_id=1 [(validate.rules).string = {min_len: 1, max_len: 20, pattern: "^[a-zA-Z0-9_-]{1,20}$"}];
	string old_password=2 [(validate.rules).string = {min_len: 6, max_len: 32, pattern: "^[a-zA-Z0-9!@#$%^&*()\\-_=+.?]{6,32}$"}];
	string new_password=3 [(validate.rules).string = {min_len: 6, max_len: 32, pattern: "^[a-zA-Z0-9!@#$%^&*()\\-_=+.?]{6,32}$"}];
}
message UpdatePasswordReply{
	string unique_id=1;
	string msg=2;
}

message GetProfileRequest{
	string unique_id=1 [(validate.rules).string = {min_len: 1, max_len: 20, pattern: "^[a-zA-Z0-9_-]{1,20}$"}];
}
message GetProfileReply{
	UserProfile profile=1;
	string phone=2;
	string msg=3;
}
message RegisterRequest {
	string phone=1 [(validate.rules).string = {pattern: "^1[3-9]\\d{9}$"}];
	string password=2 [(validate.rules).string = {min_len: 6, max_len: 32, pattern: "^[a-zA-Z0-9!@#$%^&*()\\-_=+.?]{6,32}$"}];
	string device_id=3;

}
message RegisterReply {
	string msg=1;
	string unique_id=2;
}

message LoginRequest{
	oneof identifier {
		string phone = 1 [(validate.rules).string = {pattern: "^1[3-9]\\d{9}$"}];
		string unique_id = 2 [(validate.rules).string = {min_len: 1, max_len: 20, pattern: "^[a-zA-Z0-9_-]{1,20}$"}];
	}
	string password=3 [(validate.rules).string = {min_len: 6, max_len: 32, pattern: "^[a-zA-Z0-9!@#$%^&*()\\-_=+.?]{6,32}$"}];
}
message LoginReply{
	string token=2;
	string msg=1;
	string field=3;
	string value=4;
}

message UserProfile {
	string nickname = 1 [
		(validate.rules).string = {
			min_len: 0,
			max_len: 30,
			pattern: "^[一-龥A-Za-z0-9_\\x{1F600}-\\x{1F64F}\\x{1F300}-\\x{1F5FF}]+$|^$"
		}
	];//中文、英语、数字、下划线、emoji
	string bio = 3 [(validate.rules).string = {max_len: 200}];  // 最长 200 个字符
	int32 gender = 4 [(validate.rules).int32 = {in: [0, 1, 2]}]; // 性别只能是 0（未知）、1（男）、2（女）
	string birthday = 5 [(validate.rules).string = {pattern: "^(19|20)\\d{2}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$|^$"}];  // YYYY-MM-DD 格式
	string location = 6 [(validate.rules).string = {pattern: "^[一-龥A-Za-zA-Z]+/[一-龥A-Za-zA-Z]+$|^$"}]; // 位置格式：国家/城市
	string other = 7;
}
message ProfileRequest{
	string unique_id=1 [(validate.rules).string = {min_len: 1, max_len: 20, pattern: "^[a-zA-Z0-9_-]{1,20}$"}];
	UserProfile user_profile=2;
}
message ProfileReply{
	string unique_id=1;
	string msg=2;
}

message UniqueIdRequest{
	string unique_id=1 [(validate.rules).string = {min_len: 1, max_len: 20, pattern: "^[a-zA-Z0-9_-]{1,20}$"}];
	string new_unique_id=2 [(validate.rules).string = {min_len: 1, max_len: 20, pattern: "^[a-zA-Z0-9_-]{1,20}$"}];
}
message UniqueIdReply{
	string msg=1;
	string new_unique_id=2;
}